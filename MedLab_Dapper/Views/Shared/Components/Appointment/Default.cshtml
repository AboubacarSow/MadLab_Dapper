@using MedLab_Dapper.Repositories.Contracts
@inject IRepositoryManager _manager
@model CreateAppointmentDto
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

<section id="appointment" class="appointment section">

    <!-- Section Title -->
    <div class="container section-title" data-aos="fade-up">
        <h2>Appointment</h2>
        <p>Necessitatibus eius consequatur ex aliquid fuga eum quidem sint consectetur velit</p>
    </div><!-- End Section Title -->

    <div class="container" data-aos="fade-up" data-aos-delay="100">

        <form method="post" role="form" id="appointmentForm">
            <div class="row">
                <div class="col-md-4 form-group">
                    <input type="text" id="patientName" class="form-control" id="name" placeholder="Your Name" required="">
                </div>
                <div class="col-md-4 form-group mt-3 mt-md-0">
                    <input type="email"  class="form-control" id="email" placeholder="Your Email" required="">
                </div>
                <div class="col-md-4 form-group mt-3 mt-md-0">
                    <input type="tel" class="form-control" name="phone"id="phoneNumber"  placeholder="Telefon Numaranınız" required="">
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 form-group mt-3">
                    <input type="datetime-local" id="appointmentDate" class="form-control datepicker"  placeholder="Appointment Date" required="">
                </div>
                <div class="col-md-4 form-group mt-3">
                    @{
                        var departments = await _manager.Department.GetAllDepartmentAsync();
                        var deparselectList = (from prop in departments
                                               select new SelectListItem
                                               {
                                                   Text=prop.DepartmentName,
                                                   Value=prop.DepartmentId.ToString()

                                               }).ToList();

                        
                    }
                    <select  id="departmentId"  class="form-select" required="" asp-items="deparselectList">
                        <option value="">Departman Seçiniz</option>
                    </select>
                </div>
                <div class="col-md-4 form-group mt-3">
                    <select id="doctorId" class="form-select" required="" asp-for="DoctorId">
                      
                    </select>
                </div>
            </div>

            <div class="form-group mt-3">
                <textarea class="form-control" id="message"  rows="5" placeholder="Mesajınız (Optional)"></textarea>
            </div>
            <div class="mt-3">
                <div class="text-center"><button type="submit" class="btn btn-primary rounded-1">Randevu Al </button></div>
            </div>
        </form>

    </div>

</section>


<script>
    let appointementformulaire=document.getElementById('appointmentForm');
    appointementformulaire.addEventListener("submit", function(event){
        event.preventDefault();
        let formData={
            PatientName:document.getElementById('patientName').value,
            Email:document.getElementById('email').value,
            AppointmentDate:document.getElementById('appointmentDate').value,
            PhoneNumber:document.getElementById('phoneNumber').value,
            DepartmentId:document.getElementById('departmentId').value,
            DoctorId:document.getElementById('doctorId').value,
            Message:document.getElementById('message').value,
        }

        let url ="/Home/MakeAppointment";
        fetch(url,{
            method:"POST",
            headers:{
                "Content-Type":"application/json",
                "Accept":"application/json"
            },
            body:JSON.stringify(formData)
        })
        .then(response=>response.json())
        .then(data=>{
            if(data.success){
                alert('Randevunuz Başarıyla Alındı')
                appointementformulaire.reset();
            }
            else{
                alert('İşlem Başarısız')
                console.log(data.message)

            }
        })
        .catch(Error=>{
            console.error(Error),
            alert("Hata oluştu")
        })
    });

    document.addEventListener("DOMContentLoaded", function () {
        const departmentSelect = document.getElementById("departmentId");
        const doctorSelect = document.getElementById("doctorId");

        departmentSelect.addEventListener("change", function () {
            const departmentId = this.value;

            // Vide le menu des médecins
            doctorSelect.innerHTML = '<option value="">Yükleniyor...</option>';

            if (departmentId) {
                fetch(`/Home/GetDoctorsByDepartment?departmentId=${departmentId}`)
                    .then(response => response.json())
                    .then(data => {
                        doctorSelect.innerHTML = '<option value="">Doktor Seçiniz</option>';
                        data.forEach(doctor => {
                            const option = document.createElement("option");
                            option.value = doctor.value;
                            option.text = doctor.text;
                            doctorSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error("Doktorlar yüklenirken hata oluştu:", error);
                        doctorSelect.innerHTML = '<option value="">Doktor bulunamadı</option>';
                    });
            } else {
                doctorSelect.innerHTML = '<option value="">Önce bir departman seçin</option>';
            }
        });
    });
</script>
